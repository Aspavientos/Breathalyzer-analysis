View(data_join)
rm(pca_fields)
rm(plottype)
# Options ----
opts = list(deep_clean = TRUE,
joe_plots = FALSE,
make_plots = FALSE,
save_plots = FALSE)
"\\Data\\TMPS\\"
dat = read.csv("/Data/TMPS/Propionaldehyde/dev5574_imps_0_sample_header_00000.csv", sep = ";")
require(dplyr)
require(ggfortify)
require(reshape2)
require(ggplot2)
require(stringr)
require(gridExtra)
require(cowplot)
require(rstudioapi)
require(NMF)
# Open files ----
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
dat = read.csv("/Data/TMPS/Propionaldehyde/dev5574_imps_0_sample_header_00000.csv", sep = ";")
dat = read.csv("~/Data/TMPS/Propionaldehyde/dev5574_imps_0_sample_header_00000.csv", sep = ";")
dat = read.csv(""~/Work/Breathalyzer/Breathalyzer-analysis/Data/Data/TMPS/Propionaldehyde/TMPS_Propanal_test_1_autosave_000/dev5574_imps_0_sample_header_00000.csv, sep = ";")
dat = read.csv("~/Work/Breathalyzer/Breathalyzer-analysis/Data/Data/TMPS/Propionaldehyde/TMPS_Propanal_test_1_autosave_000/dev5574_imps_0_sample_header_00000.csv", sep = ";")
getwd()
View(dat)
paste0(c(getwd(), "Data/TMPS", analyte), collapse = "/")
analyte = "Acetaldehyde"
paste0(c(getwd(), "Data/TMPS", analyte), collapse = "/")
file_list = list.files(paste0(c(getwd(), "Data/TMPS", analyte), collapse = "/"))
file_list
?list.files
network_file = choose.files(getwd(), caption = 'Choose a network file')
file_list = choose.files(paste0(c(getwd(), "Data/TMPS", analyte), collapse = "/"))
file_list = choose.files(paste0(c(getwd(), "Data/TMPS", analyte, ""), collapse = "/"))
choose.files(paste0(c(getwd(), "Data/TMPS", analyte, ""), collapse = "/"))
paste0(c(getwd(), "Data/TMPS", analyte, ""), collapse = "/")
file_list = choose.files(paste0(c(getwd(), "Data/TMPS", analyte, "Choose"), collapse = "/"))
file_analyze = choose.files(paste0(c(getwd(), "Data/TMPS", analyte, "Choose"), collapse = "/"))
data_raw = read.csv(file_analyze, sep = ";")
source("~/Work/Breathalyzer/Breathalyzer-analysis/Data/DataAnalysis.R", echo=TRUE)
source("~/Work/Breathalyzer/Breathalyzer-analysis/Data/DataAnalysis.R", echo=TRUE)
View(data_join)
source("~/Work/Breathalyzer/Breathalyzer-analysis/Data/DataAnalysis.R", echo=TRUE)
pca_plot_tab
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
# str_match : sample_\d{5}
# Options ----
opts = list(
deep_clean = TRUE,
joe_plots = FALSE,
make_plots = TRUE,
save_plots = TRUE,
multi_analyte = TRUE
)
if (opts$make_plots) {
pca_opts$targeting = "targeted"
pca_opts$scaling = opts_multi$scaling
pca_opts$color = "realz"
pca_loadings = signif(-1 * pca$rotation, digits = 3)
pca_obj = pca$x
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts))
pca_plot = ggplot(pca_obj, aes(x = PC1, y = PC2, color = data_multi[, pca_opts$color])) +
geom_point(size = 2, alpha = .4, position = "jitter") +
labs(x = paste0('PC1', ' (', (summary(pca)$importance[2, 1]), ')'),
y = paste0('PC2', ' (', (summary(pca)$importance[2, 2]), ')'),
color = pca_opts$color) +
#scale_color_continuous(low = "magenta", high = "cyan") +
ggtitle("Multianalyte PCA", subtitle = paste(plottype, collapse = ", ")) +
theme_bw() + cutie_layer()
pca_plot_tab = plot_grid(pca_plot, tableGrob(pca_loadings[, c("PC1", "PC2")]), rel_widths = c(3, 1)) +
theme_bw()
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
}
}
if (opts$make_plots) {
pca_opts$targeting = "targeted"
pca_opts$scaling = opts_multi$scaling
pca_opts$color = "absz"
pca_loadings = signif(-1 * pca$rotation, digits = 3)
pca_obj = pca$x
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts))
pca_plot = ggplot(pca_obj, aes(x = PC1, y = PC2, color = data_multi[, pca_opts$color])) +
geom_point(size = 2, alpha = .4, position = "jitter") +
labs(x = paste0('PC1', ' (', (summary(pca)$importance[2, 1]), ')'),
y = paste0('PC2', ' (', (summary(pca)$importance[2, 2]), ')'),
color = pca_opts$color) +
#scale_color_continuous(low = "magenta", high = "cyan") +
ggtitle("Multianalyte PCA", subtitle = paste(plottype, collapse = ", ")) +
theme_bw() + cutie_layer()
pca_plot_tab = plot_grid(pca_plot, tableGrob(pca_loadings[, c("PC1", "PC2")]), rel_widths = c(3, 1)) +
theme_bw()
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
}
}
if (opts$make_plots) {
pca_opts$targeting = "targeted"
pca_opts$scaling = opts_multi$scaling
pca_opts$color = "imagz"
pca_loadings = signif(-1 * pca$rotation, digits = 3)
pca_obj = pca$x
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts))
pca_plot = ggplot(pca_obj, aes(x = PC1, y = PC2, color = data_multi[, pca_opts$color])) +
geom_point(size = 2, alpha = .4, position = "jitter") +
labs(x = paste0('PC1', ' (', (summary(pca)$importance[2, 1]), ')'),
y = paste0('PC2', ' (', (summary(pca)$importance[2, 2]), ')'),
color = pca_opts$color) +
#scale_color_continuous(low = "magenta", high = "cyan") +
ggtitle("Multianalyte PCA", subtitle = paste(plottype, collapse = ", ")) +
theme_bw() + cutie_layer()
pca_plot_tab = plot_grid(pca_plot, tableGrob(pca_loadings[, c("PC1", "PC2")]), rel_widths = c(3, 1)) +
theme_bw()
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
}
}
data_multi = data_mlist[[1]]
if(opts_multi$scaling == "scaled"){
data_multi[,opts_multi$field] = (data_multi[,opts_multi$field] - mean(data_multi[,opts_multi$field]))/(sd(data_multi[,opts_multi$field]))
}
data_multi = extract_freq(data_multi)
for (i in 2:length(data_mlist)){
data_temp = data_mlist[[i]]
if(opts_multi$scaling == "scaled"){
data_temp[,opts_multi$field] = (data_temp[,opts_multi$field] - mean(data_temp[,opts_multi$field]))/(sd(data_temp[,opts_multi$field]))
}
data_temp = extract_freq(data_temp)
data_multi = rbind(data_multi, data_temp)
}
data_multi = data_multi %>% select(Analyte, everything())
data_multi$Analyte = as.factor(data_multi$Analyte)
View(data_multi)
mean(data_multi[,c("absz", "imagz")])
mean(data_multi[,c(10,12)])
pca_opts = list(
targeting = "untargeted",
fields = "reduced",
scaling = "unscaled",
color = "absz",
pca_fields = c("absz", "abszstddev", "imagz", "imagzstddev", "phasez", "phasezstddev", "realz", "realzstddev")
)
apply(data_multi[,pca_opts$pca_fields], 2, mean)
apply(data_multi[,pca_opts$pca_fields], 2, sd)
(data_multi[,pca_opts$pca_fields] - apply(data_multi[,pca_opts$pca_fields], 2, mean))/(apply(data_multi[,pca_opts$pca_fields], 2, sd))
1:length(pca_opts$pca_fields)
pca_opts$pca_fields[i]
data_multi = data_mlist[[1]]
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_multi[,pca_opts$pca_fields[i]] = (data_multi[,pca_opts$pca_fields[i]] - mean(data_multi[,pca_opts$pca_fields[i]]))/(sd(data_multi[,pca_opts$pca_fields[i]]))
}
}
data_multi = extract_freq(data_mlist[[1]])
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_multi[,pca_opts$pca_fields[i]] = (data_multi[,pca_opts$pca_fields[i]] - mean(data_multi[,pca_opts$pca_fields[i]]))/(sd(data_multi[,pca_opts$pca_fields[i]]))
}
}
for (i in 2:length(data_mlist)){
data_temp = extract_freq(data_mlist[[i]])
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_temp[,pca_opts$pca_fields[i]] = (data_temp[,pca_opts$pca_fields[i]] - mean(data_temp[,pca_opts$pca_fields[i]]))/(sd(data_temp[,pca_opts$pca_fields[i]]))
}
}
data_multi = rbind(data_multi, data_temp)
}
data_multi = data_multi %>% select(Analyte, everything())
data_multi$Analyte = as.factor(data_multi$Analyte)
# PCA
if (pca_opts$fields == "reduced") {
pca = prcomp(data_multi[, pca_opts$pca_fields])
}else{
pca = prcomp(data_multi[, -c(1:9)])
}
if (opts$make_plots) {
pca_opts$targeting = "targeted"
pca_opts$scaling = opts_multi$scaling
pca_opts$color = "imagz"
pca_loadings = signif(-1 * pca$rotation, digits = 3)
pca_obj = pca$x
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts))
pca_plot = ggplot(pca_obj, aes(x = PC1, y = PC2, color = data_multi[, pca_opts$color])) +
geom_point(size = 2, alpha = .4, position = "jitter") +
labs(x = paste0('PC1', ' (', (summary(pca)$importance[2, 1]), ')'),
y = paste0('PC2', ' (', (summary(pca)$importance[2, 2]), ')'),
color = pca_opts$color) +
#scale_color_continuous(low = "magenta", high = "cyan") +
ggtitle("Multianalyte PCA", subtitle = paste(plottype, collapse = ", ")) +
theme_bw() + cutie_layer()
pca_plot_tab = plot_grid(pca_plot, tableGrob(pca_loadings[, c("PC1", "PC2")]), rel_widths = c(3, 1)) +
theme_bw()
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
}
}
pca_plot_tab
# PCA
if (pca_opts$fields == "reduced") {
pca = prcomp(data_multi[, pca_opts$pca_fields])
}else{
pca = prcomp(data_multi[, -c(1:9)])
}
if (opts$make_plots) {
pca_opts$targeting = "targeted"
pca_opts$scaling = opts_multi$scaling
pca_opts$color = "Analyte"
pca_loadings = signif(-1 * pca$rotation, digits = 3)
pca_obj = pca$x
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts))
pca_plot = ggplot(pca_obj, aes(x = PC1, y = PC2, color = data_multi[, pca_opts$color])) +
geom_point(size = 2, alpha = .4, position = "jitter") +
labs(x = paste0('PC1', ' (', (summary(pca)$importance[2, 1]), ')'),
y = paste0('PC2', ' (', (summary(pca)$importance[2, 2]), ')'),
color = pca_opts$color) +
#scale_color_continuous(low = "magenta", high = "cyan") +
ggtitle("Multianalyte PCA", subtitle = paste(plottype, collapse = ", ")) +
theme_bw() + cutie_layer()
pca_plot_tab = plot_grid(pca_plot, tableGrob(pca_loadings[, c("PC1", "PC2")]), rel_widths = c(3, 1)) +
theme_bw()
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
}
}
pca_plot
pca_opts[1:4]
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts[1:4]))
plottype
# PCA
if (pca_opts$fields == "reduced") {
pca = prcomp(data_multi[, pca_opts$pca_fields])
}else{
pca = prcomp(data_multi[, -c(1:9)])
}
if (opts$make_plots) {
pca_opts$targeting = "targeted"
pca_opts$scaling = opts_multi$scaling
pca_opts$color = "Analyte"
pca_loadings = signif(-1 * pca$rotation, digits = 3)
pca_obj = pca$x
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts[1:4]))
pca_plot = ggplot(pca_obj, aes(x = PC1, y = PC2, color = data_multi[, pca_opts$color])) +
geom_point(size = 2, alpha = .4, position = "jitter") +
labs(x = paste0('PC1', ' (', (summary(pca)$importance[2, 1]), ')'),
y = paste0('PC2', ' (', (summary(pca)$importance[2, 2]), ')'),
color = pca_opts$color) +
#scale_color_continuous(low = "magenta", high = "cyan") +
ggtitle("Multianalyte PCA", subtitle = paste(plottype, collapse = ", ")) +
theme_bw() + cutie_layer()
pca_plot_tab = plot_grid(pca_plot, tableGrob(pca_loadings[, c("PC1", "PC2")]), rel_widths = c(3, 1)) +
theme_bw()
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
}
}
pca_plot
# Multi analyte ----
if(opts$multi_analyte){
opts_multi = list(field = "absz",
scaling = "unscaled")
data_mlist = list(cbind(data_join, Analyte = rep(analyte, nrow(data_join))))
names(data_mlist)[1] = analyte
file_analyze = choose.files(file.path(getwd(), "Data/TMPS", "Choose"))
while (!identical(file_analyze, character(0))) {
data_raw = read.csv(file_analyze, sep = ";")
data_join = clean_data(data_raw, deep_clean = opts$deep_clean)
analyte = basename(dirname(dirname(file_analyze)))
data_mlist[[length(data_mlist) + 1]] = cbind(data_join, Analyte = rep(analyte, nrow(data_join)))
names(data_mlist)[length(data_mlist)] = analyte
names(data_mlist) = make.names(names(data_mlist), unique = T)
file_analyze = choose.files(file.path(getwd(), "Data/TMPS", "Choose"))
}
rm(data_raw, file_analyze, analyte)
data_multi = extract_freq(data_mlist[[1]])
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_multi[,pca_opts$pca_fields[i]] = (data_multi[,pca_opts$pca_fields[i]] - mean(data_multi[,pca_opts$pca_fields[i]]))/(sd(data_multi[,pca_opts$pca_fields[i]]))
}
}
for (i in 2:length(data_mlist)){
data_temp = extract_freq(data_mlist[[i]])
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_temp[,pca_opts$pca_fields[i]] = (data_temp[,pca_opts$pca_fields[i]] - mean(data_temp[,pca_opts$pca_fields[i]]))/(sd(data_temp[,pca_opts$pca_fields[i]]))
}
}
data_multi = rbind(data_multi, data_temp)
}
data_multi = data_multi %>% select(Analyte, everything())
data_multi$Analyte = as.factor(data_multi$Analyte)
# PCA
if (pca_opts$fields == "reduced") {
pca = prcomp(data_multi[, pca_opts$pca_fields])
}else{
pca = prcomp(data_multi[, -c(1:9)])
}
if (opts$make_plots) {
pca_opts$targeting = "targeted"
pca_opts$scaling = opts_multi$scaling
pca_opts$color = "Analyte"
pca_loadings = signif(-1 * pca$rotation, digits = 3)
pca_obj = pca$x
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts[1:4]))
pca_plot = ggplot(pca_obj, aes(x = PC1, y = PC2, color = data_multi[, pca_opts$color])) +
geom_point(size = 2, alpha = .4, position = "jitter") +
labs(x = paste0('PC1', ' (', (summary(pca)$importance[2, 1]), ')'),
y = paste0('PC2', ' (', (summary(pca)$importance[2, 2]), ')'),
color = pca_opts$color) +
#scale_color_continuous(low = "magenta", high = "cyan") +
ggtitle("Multianalyte PCA", subtitle = paste(plottype, collapse = ", ")) +
theme_bw() + cutie_layer()
pca_plot_tab = plot_grid(pca_plot, tableGrob(pca_loadings[, c("PC1", "PC2")]), rel_widths = c(3, 1)) +
theme_bw()
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
}
}
}
data_multi = extract_freq(data_mlist[[1]])
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_multi[,pca_opts$pca_fields[i]] = (data_multi[,pca_opts$pca_fields[i]] - mean(data_multi[,pca_opts$pca_fields[i]]))/(sd(data_multi[,pca_opts$pca_fields[i]]))
}
}
for (i in 2:length(data_mlist)){
data_temp = extract_freq(data_mlist[[i]])
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_temp[,pca_opts$pca_fields[i]] = (data_temp[,pca_opts$pca_fields[i]] - mean(data_temp[,pca_opts$pca_fields[i]]))/(sd(data_temp[,pca_opts$pca_fields[i]]))
}
}
data_multi = rbind(data_multi, data_temp)
}
data_multi = data_multi %>% select(Analyte, everything())
data_multi$Analyte = as.factor(data_multi$Analyte)
# PCA
if (pca_opts$fields == "reduced") {
pca = prcomp(data_multi[, pca_opts$pca_fields])
}else{
pca = prcomp(data_multi[, -c(1:9)])
}
if (opts$make_plots) {
pca_opts$targeting = "targeted"
pca_opts$scaling = opts_multi$scaling
pca_opts$color = "Analyte"
pca_loadings = signif(-1 * pca$rotation, digits = 3)
pca_obj = pca$x
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts[1:4]))
pca_plot = ggplot(pca_obj, aes(x = PC1, y = PC2, color = data_multi[, pca_opts$color])) +
geom_point(size = 2, alpha = .4, position = "jitter") +
labs(x = paste0('PC1', ' (', (summary(pca)$importance[2, 1]), ')'),
y = paste0('PC2', ' (', (summary(pca)$importance[2, 2]), ')'),
color = pca_opts$color) +
#scale_color_continuous(low = "magenta", high = "cyan") +
ggtitle("Multianalyte PCA", subtitle = paste(plottype, collapse = ", ")) +
theme_bw() + cutie_layer()
pca_plot_tab = plot_grid(pca_plot, tableGrob(pca_loadings[, c("PC1", "PC2")]), rel_widths = c(3, 1)) +
theme_bw()
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
}
}
pca_plot
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
}
opts_multi = list(field = "absz",
scaling = "scaled")
data_multi = extract_freq(data_mlist[[1]])
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_multi[,pca_opts$pca_fields[i]] = (data_multi[,pca_opts$pca_fields[i]] - mean(data_multi[,pca_opts$pca_fields[i]]))/(sd(data_multi[,pca_opts$pca_fields[i]]))
}
}
for (i in 2:length(data_mlist)){
data_temp = extract_freq(data_mlist[[i]])
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_temp[,pca_opts$pca_fields[i]] = (data_temp[,pca_opts$pca_fields[i]] - mean(data_temp[,pca_opts$pca_fields[i]]))/(sd(data_temp[,pca_opts$pca_fields[i]]))
}
}
data_multi = rbind(data_multi, data_temp)
}
data_multi = data_multi %>% select(Analyte, everything())
data_multi$Analyte = as.factor(data_multi$Analyte)
# PCA
if (pca_opts$fields == "reduced") {
pca = prcomp(data_multi[, pca_opts$pca_fields])
}else{
pca = prcomp(data_multi[, -c(1:9)])
}
if (opts$make_plots) {
pca_opts$targeting = "targeted"
pca_opts$scaling = opts_multi$scaling
pca_opts$color = "Analyte"
pca_loadings = signif(-1 * pca$rotation, digits = 3)
pca_obj = pca$x
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts[1:4]))
pca_plot = ggplot(pca_obj, aes(x = PC1, y = PC2, color = data_multi[, pca_opts$color])) +
geom_point(size = 2, alpha = .4, position = "jitter") +
labs(x = paste0('PC1', ' (', (summary(pca)$importance[2, 1]), ')'),
y = paste0('PC2', ' (', (summary(pca)$importance[2, 2]), ')'),
color = pca_opts$color) +
#scale_color_continuous(low = "magenta", high = "cyan") +
ggtitle("Multianalyte PCA", subtitle = paste(plottype, collapse = ", ")) +
theme_bw() + cutie_layer()
pca_plot_tab = plot_grid(pca_plot, tableGrob(pca_loadings[, c("PC1", "PC2")]), rel_widths = c(3, 1)) +
theme_bw()
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts), collapse = "_"))
}
}
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts[1:4]), collapse = "_"))
}
opts_multi = list(field = "absz",
scaling = "unscaled")
data_multi = extract_freq(data_mlist[[1]])
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_multi[,pca_opts$pca_fields[i]] = (data_multi[,pca_opts$pca_fields[i]] - mean(data_multi[,pca_opts$pca_fields[i]]))/(sd(data_multi[,pca_opts$pca_fields[i]]))
}
}
for (i in 2:length(data_mlist)){
data_temp = extract_freq(data_mlist[[i]])
if(opts_multi$scaling == "scaled"){
for (i in 1:length(pca_opts$pca_fields)){
data_temp[,pca_opts$pca_fields[i]] = (data_temp[,pca_opts$pca_fields[i]] - mean(data_temp[,pca_opts$pca_fields[i]]))/(sd(data_temp[,pca_opts$pca_fields[i]]))
}
}
data_multi = rbind(data_multi, data_temp)
}
data_multi = data_multi %>% select(Analyte, everything())
data_multi$Analyte = as.factor(data_multi$Analyte)
# PCA
if (pca_opts$fields == "reduced") {
pca = prcomp(data_multi[, pca_opts$pca_fields])
}else{
pca = prcomp(data_multi[, -c(1:9)])
}
if (opts$make_plots) {
pca_opts$targeting = "targeted"
pca_opts$scaling = opts_multi$scaling
pca_opts$color = "Analyte"
pca_loadings = signif(-1 * pca$rotation, digits = 3)
pca_obj = pca$x
plottype = c(paste(c(
"Target:", "Fields:", "Scaling:", "Color:"
), pca_opts[1:4]))
pca_plot = ggplot(pca_obj, aes(x = PC1, y = PC2, color = data_multi[, pca_opts$color])) +
geom_point(size = 2, alpha = .4, position = "jitter") +
labs(x = paste0('PC1', ' (', (summary(pca)$importance[2, 1]), ')'),
y = paste0('PC2', ' (', (summary(pca)$importance[2, 2]), ')'),
color = pca_opts$color) +
#scale_color_continuous(low = "magenta", high = "cyan") +
ggtitle("Multianalyte PCA", subtitle = paste(plottype, collapse = ", ")) +
theme_bw() + cutie_layer()
pca_plot_tab = plot_grid(pca_plot, tableGrob(pca_loadings[, c("PC1", "PC2")]), rel_widths = c(3, 1)) +
theme_bw()
if (opts$save_plots) {
customggsave(pca_plot_tab,
upscale = 2,
name = paste(c("PCAmulti", pca_opts[1:4]), collapse = "_"))
}
}
