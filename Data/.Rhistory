1 - pnorm(5, mean=0, sd=1)
1 - pnorm(5, mean=3, sd=2)
pnorm(4, mean=3, sd=2) - pnorm(2, mean=3, sd=2)
qnorm(0.9 mean=3, sd=2)
qnorm(0.9, mean=3, sd=2)
pbinom(4, size=8, prob=0.6)
dbinom(2, size=8, prob=0.6)
positivetests = (infected)*(1-falseneg) + (1-infected)*falsepos
falsepos = 0.074
falseneg = 0.023
infected = 0.006
positivetests = (infected)*(1-falseneg) + (1-infected)*falsepos
n = 100000
falsepos = 0.074
falseneg = 0.023
infected = 0.006
npositiveinfect = 0
npositivenotinfect = 0
for (i in 1:n){
hiv = runif(1)
tests = runif(1)
npositiveinfect = npositiveinfect + (hiv<infected)*(test>falseneg)
npositivenotinfect = npositivenotinfect + (hiv>infected)*(test<falsepos)
}
npositive = npositivenotinfect + npositivenotinfect
rm(list = ls())
falsepos = 0.074
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
s
max(simulF)
max(simulF)*0.75
sort(simulF)[max(simulF)*0.75]
sort(simulF)[max(simulF)*0.99]
simulF[max(simulF)*0.75]
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
hist(sort(simulF))
simulF
simulF[1]
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
n
sort(simulF)[n]
max(simulF)
max(simulF)*0.75
simulF[max(simulF)*0.75]
test = [1 2 3 4 5]
test = (1 2 3 4 5)
test = (1, 2, 3, 4, 5)
test <- 10
test
test[1] = 1
test
test[2] = 2
test [3] = 3
test[4] = 4
test[5] = 5
test[5]
test[3]
test[3.5]
test[3.6]
sort(test)
sort(test)[3.5]
hist(2/25x)
test[1]= 3
test[2]= 2
test[4]= 1
test[3]= 5
test[5]= 4
sort(test)
test(4.5)
test[4.5]
sort(test)[4.5]
sort(simulF)[max(simulF)*0.75]
test + +1
sort(test)[3.5]
sort(test)
sort(test+1)[3.5]
sort(simulF)[n*0.75]
sort(simulF)[n*0.75]
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
c = sort(simulF)[0.75*n]
sort(simulF)[0.75*n]
sort(simulF)[0.25*n]
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
library("PRSMultiTrait")
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
detach("package:PRSMultiTrait", unload = TRUE)
library(PRSMultiTrait)
PRSMultiTrait::installDependenciesAndData()
PRSMultiTrait::checkDataIDs("path/to/b-files.bim")
PRSMultiTrait::runPGSApp()
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
PRSMultiTrait::installDependenciesAndData()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
PRSMultiTrait::checkDataIDs("path/to/b-files.bim")
PRSMultiTrait::runPGSApp()
install.packages(corr)
install.packages("corr")
install.packages("devtools")
install.packages("tidyr")
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait")
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
PRSMultiTrait::checkDataIDs("path/to/b-files.bim")
PRSMultiTrait::runPGSApp()
installed.packages("tidyverse")
install.packages("tidyverse")
PRSMultiTrait::runPGSApp()
install.packages("corr")
PRSMultiTrait::runPGSApp()
install.packages("corrr")
PRSMultiTrait::runPGSApp()
install.packages("ggdendroplot")
devtools::install_github("nicolash2/ggdendroplot")
PRSMultiTrait::runPGSApp()
install.packages("patchwork")
PRSMultiTrait::runPGSApp()
install.packages("DT")
PRSMultiTrait::runPGSApp()
install.packages("shinywidgets")
install.packages("shinyWidgets")
PRSMultiTrait::runPGSApp()
install.packages("shinycssloaders")
PRSMultiTrait::runPGSApp()
install.packages("shinyFiles")
PRSMultiTrait::runPGSApp()
PRSMultiTrait::checkDataIDs("path/to/b-files.bim")
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
install.packages("devtools")
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait")
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
install.packages("devtools")
library(PRSMultiTrait)
detach("package:PRSMultiTrait", unload = TRUE)
remove.packages("PRSMultiTrait")
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait")
.libPaths()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
library('PRSMultiTrait')
PRSMultiTrait::installDependenciesAndData()
.libPaths()
.libPaths(c(.libPaths, "G:/Portable Laptop/R packages"))
.libPaths(c(.libPaths, "G:\Portable Laptop\R packages"))
.libPaths(c(.libPaths, "G:/Portable Laptop/R packages"))
.libPaths(c(.libPaths, "G:/Portable Laptop/R packages"))
.libPaths(c(.libPaths(), "G:/Portable Laptop/R packages"))
.libPaths()
.libPaths()
.libPaths()
.libPaths()
?Startup
geted()
getwd()
candidates <- c( Sys.getenv("R_PROFILE"),
file.path(Sys.getenv("R_HOME"), "etc", "Rprofile.site"),
Sys.getenv("R_PROFILE_USER"),
file.path(getwd(), ".Rprofile"),
file.path(Sys.getenv("HOME"), ".Rprofile"))
Filter(file.exists, candidates)
.libPaths()
.libPaths()
.libPaths()
install.packages(installr)
install.packages("installr")
updateR()
library("installr")
updateR()
.libPaths()
.libPaths()
usethis::edit_r_profile()
usethis::edit_r_profile()
.libPaths()
library("PRSMultitrait")
library(PRSMultiTrait)
PRSMultiTrait::runPGSApp()
.libPaths()
install.packages("knitr")
paths = .libPaths()
remove.packages("PRSMultitrait")
remove.packages("PRSMultiTrait")
library(PRSMultiTrait, lib.loc = "G:/Portable Laptop/R packages")
remove.packages("PRSMultiTrait", lib = paths[3])
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait", lib = paths[3])
detach("PRSMultiTrait")
detach("package:PRSMultiTrait")
detach("package:PRSMultiTrait", unload = TRUE)
detach("PRSMultiTrait", unload = TRUE)
detach("PRSMultiTrait")
detach(PRSMultiTrait)
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait", lib = paths[3])
paths = .libPaths()
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait", lib = paths[3])
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
PRSMultiTrait::installDependenciesAndData()
PRSMultiTrait::runPGSApp()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
?PRSMultiTrait::installDependenciesAndData()
detach(PRSMultiTrait)
detach("PRSMultiTrait")
library(PRSMultiTrait, lib.loc = "G:/Portable Laptop/R packages")
PRSMultiTrait::installDependenciesAndData()
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait")
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait", force = TRUE)
detach("package:PRSMultiTrait", unload = TRUE)
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait", force = TRUE)
library(PRSMultiTrait)
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
remove.packages("PRSMultiTrait")
install.packages(c('ggplot2', 'dplyr', 'ggpubr', 'rstudioapi', 'vegan', 'grDevices', 'dplyr', 'ggdendro', 'reshape2', 'maps'))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
detach(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
detach(c("package:cli", "package:dplyr", "package:fansi", "package:glue", "package:rlang", "package:utf8", "package:vctrs"), unload = T)
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
library(abind)
detach("package:abind", unload = TRUE)
packs = c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs")
packs = pasteo0('package:', c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
packs = paste0('package:', c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
sapply(packs, detach(unload = T))
lapply(packs, detach(unload = T))
lapply(packs, detach)
lapply(packs, detach, unload = TRUE)
Sys.getlocale()
Sys.setenv(LANG = "en")
x+2
require(RCy3)
browseVignettes("RCy3")
?exportImage
require(RCy3)
require(rstudioapi)
require(utils)
require(stringr)
require(beepr)
sInfo = sessionInfo()
pkgs = sInfo$otherPkgs
df = data.frame(Package = rep('', length(pkgs)),
Version = rep('', length(pkgs)),
Citation = rep('', length(pkgs)))
for (i in 1:length(pkgs)){
this_pkg = pkgs[[i]]
df$Package[i] = this_pkg$Package
df$Version[i] = this_pkg$Version
df$Citation[i] = paste0('\\cite{', this_pkg$Package,'}')
}
View(df)
install.packages("clipr")
library("clipr")
citation('stringr')
citation('RCy3')
citation('utils')
View(df)
source("~/Work/Breathalyzer/Data/DataAnalysis.R", echo=TRUE)
View(data)
View(data_join)
hist(data_join$frequency)
[1,2,3]
c(1,2,3)
floor(20.3)
floor(20.8)
conc_increase = c(0, 0.1, 0.5, 1, 10, 50, 100) # Concentrations increase to these values in nM
conc_increase[1]
conc_increase[7]
ceiling(0.1)
ceiling(0)
i = 1
# From the source data
nms = datalist[[i]]$fieldname
View(datalist)
datalist[[i]]
debugSource("~/Work/Breathalyzer/Data/DataAnalysis.R", echo=TRUE)
1:length(datalist)
80*5
source("~/Work/Breathalyzer/Data/DataAnalysis.R", echo=TRUE)
i = 80
# From the source data
nms = datalist[[i]]$fieldname
chnk = datalist[[i]]$chunk[1]
tmstmp = datalist[[i]]$timestamp[1]
sz = datalist[[i]]$size[1]
# From experimental constants
time = chnk*chunk_duration
floor(time/conc_duration)
time/conc_duration
(time+20)/conc_duration
7*60*5
7*60*5/20
ph_impedances = data_join$phasez
ph_impedances
phase_z = data$fieldname == "phasez"
sum(phasez)
sum(phase_z)
300/80
only_phasez = data[phase_z,]
View(only_phasez)
