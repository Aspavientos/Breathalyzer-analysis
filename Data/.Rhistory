1 - pnorm(5, mean=0, sd=1)
1 - pnorm(5, mean=3, sd=2)
pnorm(4, mean=3, sd=2) - pnorm(2, mean=3, sd=2)
qnorm(0.9 mean=3, sd=2)
qnorm(0.9, mean=3, sd=2)
pbinom(4, size=8, prob=0.6)
dbinom(2, size=8, prob=0.6)
positivetests = (infected)*(1-falseneg) + (1-infected)*falsepos
falsepos = 0.074
falseneg = 0.023
infected = 0.006
positivetests = (infected)*(1-falseneg) + (1-infected)*falsepos
n = 100000
falsepos = 0.074
falseneg = 0.023
infected = 0.006
npositiveinfect = 0
npositivenotinfect = 0
for (i in 1:n){
hiv = runif(1)
tests = runif(1)
npositiveinfect = npositiveinfect + (hiv<infected)*(test>falseneg)
npositivenotinfect = npositivenotinfect + (hiv>infected)*(test<falsepos)
}
npositive = npositivenotinfect + npositivenotinfect
rm(list = ls())
falsepos = 0.074
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
s
max(simulF)
max(simulF)*0.75
sort(simulF)[max(simulF)*0.75]
sort(simulF)[max(simulF)*0.99]
simulF[max(simulF)*0.75]
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
hist(sort(simulF))
simulF
simulF[1]
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
n
sort(simulF)[n]
max(simulF)
max(simulF)*0.75
simulF[max(simulF)*0.75]
test = [1 2 3 4 5]
test = (1 2 3 4 5)
test = (1, 2, 3, 4, 5)
test <- 10
test
test[1] = 1
test
test[2] = 2
test [3] = 3
test[4] = 4
test[5] = 5
test[5]
test[3]
test[3.5]
test[3.6]
sort(test)
sort(test)[3.5]
hist(2/25x)
test[1]= 3
test[2]= 2
test[4]= 1
test[3]= 5
test[5]= 4
sort(test)
test(4.5)
test[4.5]
sort(test)[4.5]
sort(simulF)[max(simulF)*0.75]
test + +1
sort(test)[3.5]
sort(test)
sort(test+1)[3.5]
sort(simulF)[n*0.75]
sort(simulF)[n*0.75]
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 3.R', echo=TRUE)
c = sort(simulF)[0.75*n]
sort(simulF)[0.75*n]
sort(simulF)[0.25*n]
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
source('~/Uni/3º/Statistics/Lab/Session 2/Ex 2a.R', echo=TRUE)
library("PRSMultiTrait")
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
detach("package:PRSMultiTrait", unload = TRUE)
library(PRSMultiTrait)
PRSMultiTrait::installDependenciesAndData()
PRSMultiTrait::checkDataIDs("path/to/b-files.bim")
PRSMultiTrait::runPGSApp()
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
PRSMultiTrait::installDependenciesAndData()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
PRSMultiTrait::checkDataIDs("path/to/b-files.bim")
PRSMultiTrait::runPGSApp()
install.packages(corr)
install.packages("corr")
install.packages("devtools")
install.packages("tidyr")
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait")
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
PRSMultiTrait::checkDataIDs("path/to/b-files.bim")
PRSMultiTrait::runPGSApp()
installed.packages("tidyverse")
install.packages("tidyverse")
PRSMultiTrait::runPGSApp()
install.packages("corr")
PRSMultiTrait::runPGSApp()
install.packages("corrr")
PRSMultiTrait::runPGSApp()
install.packages("ggdendroplot")
devtools::install_github("nicolash2/ggdendroplot")
PRSMultiTrait::runPGSApp()
install.packages("patchwork")
PRSMultiTrait::runPGSApp()
install.packages("DT")
PRSMultiTrait::runPGSApp()
install.packages("shinywidgets")
install.packages("shinyWidgets")
PRSMultiTrait::runPGSApp()
install.packages("shinycssloaders")
PRSMultiTrait::runPGSApp()
install.packages("shinyFiles")
PRSMultiTrait::runPGSApp()
PRSMultiTrait::checkDataIDs("path/to/b-files.bim")
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
install.packages("devtools")
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait")
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
install.packages("devtools")
library(PRSMultiTrait)
detach("package:PRSMultiTrait", unload = TRUE)
remove.packages("PRSMultiTrait")
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait")
.libPaths()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
library('PRSMultiTrait')
PRSMultiTrait::installDependenciesAndData()
.libPaths()
.libPaths(c(.libPaths, "G:/Portable Laptop/R packages"))
.libPaths(c(.libPaths, "G:\Portable Laptop\R packages"))
.libPaths(c(.libPaths, "G:/Portable Laptop/R packages"))
.libPaths(c(.libPaths, "G:/Portable Laptop/R packages"))
.libPaths(c(.libPaths(), "G:/Portable Laptop/R packages"))
.libPaths()
.libPaths()
.libPaths()
.libPaths()
?Startup
geted()
getwd()
candidates <- c( Sys.getenv("R_PROFILE"),
file.path(Sys.getenv("R_HOME"), "etc", "Rprofile.site"),
Sys.getenv("R_PROFILE_USER"),
file.path(getwd(), ".Rprofile"),
file.path(Sys.getenv("HOME"), ".Rprofile"))
Filter(file.exists, candidates)
.libPaths()
.libPaths()
.libPaths()
install.packages(installr)
install.packages("installr")
updateR()
library("installr")
updateR()
.libPaths()
.libPaths()
usethis::edit_r_profile()
usethis::edit_r_profile()
.libPaths()
library("PRSMultitrait")
library(PRSMultiTrait)
PRSMultiTrait::runPGSApp()
.libPaths()
install.packages("knitr")
paths = .libPaths()
remove.packages("PRSMultitrait")
remove.packages("PRSMultiTrait")
library(PRSMultiTrait, lib.loc = "G:/Portable Laptop/R packages")
remove.packages("PRSMultiTrait", lib = paths[3])
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait", lib = paths[3])
detach("PRSMultiTrait")
detach("package:PRSMultiTrait")
detach("package:PRSMultiTrait", unload = TRUE)
detach("PRSMultiTrait", unload = TRUE)
detach("PRSMultiTrait")
detach(PRSMultiTrait)
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait", lib = paths[3])
paths = .libPaths()
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait", lib = paths[3])
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
PRSMultiTrait::installDependenciesAndData()
PRSMultiTrait::runPGSApp()
library("PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
?PRSMultiTrait::installDependenciesAndData()
detach(PRSMultiTrait)
detach("PRSMultiTrait")
library(PRSMultiTrait, lib.loc = "G:/Portable Laptop/R packages")
PRSMultiTrait::installDependenciesAndData()
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait")
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait", force = TRUE)
detach("package:PRSMultiTrait", unload = TRUE)
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait", force = TRUE)
library(PRSMultiTrait)
devtools::install_github("Rrtk2/PRS-multi-trait/Package/PRSMultiTrait")
PRSMultiTrait::installDependenciesAndData()
remove.packages("PRSMultiTrait")
install.packages(c('ggplot2', 'dplyr', 'ggpubr', 'rstudioapi', 'vegan', 'grDevices', 'dplyr', 'ggdendro', 'reshape2', 'maps'))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
detach(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
detach(c("package:cli", "package:dplyr", "package:fansi", "package:glue", "package:rlang", "package:utf8", "package:vctrs"), unload = T)
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
library(abind)
detach("package:abind", unload = TRUE)
packs = c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs")
packs = pasteo0('package:', c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
packs = paste0('package:', c("cli", "dplyr", "fansi", "glue", "rlang", "utf8", "vctrs"))
sapply(packs, detach(unload = T))
lapply(packs, detach(unload = T))
lapply(packs, detach)
lapply(packs, detach, unload = TRUE)
Sys.getlocale()
Sys.setenv(LANG = "en")
x+2
require(RCy3)
browseVignettes("RCy3")
?exportImage
require(RCy3)
require(rstudioapi)
require(utils)
require(stringr)
require(beepr)
sInfo = sessionInfo()
pkgs = sInfo$otherPkgs
df = data.frame(Package = rep('', length(pkgs)),
Version = rep('', length(pkgs)),
Citation = rep('', length(pkgs)))
for (i in 1:length(pkgs)){
this_pkg = pkgs[[i]]
df$Package[i] = this_pkg$Package
df$Version[i] = this_pkg$Version
df$Citation[i] = paste0('\\cite{', this_pkg$Package,'}')
}
View(df)
install.packages("clipr")
library("clipr")
citation('stringr')
citation('RCy3')
citation('utils')
View(df)
source("~/Work/Breathalyzer/Breathalyzer-analysis/Data/DataAnalysis.R", echo=TRUE)
View(data_join)
# List of dataframes, one for each chunk
datalist = split(data, data$chunk)
names(datalist) = paste0(rep("chunk_", length(datalist)), names(datalist))
length(datalist)
i = 3
datalist[[i]]$fieldname
datalist[[i]]$chunk
datalist[[i]]$chunk[1]
datalist[[i]]$timestamp[1]
datalist[[i]]$size[1]
data_t = as.data.frame(t(datalist[[i]][,c(5:ncol(data))]))
View(data_t)
nms = datalist[[i]]$fieldname
chnk = datalist[[i]]$chunk[1]
tmstmp = datalist[[i]]$timestamp[1]
sz = datalist[[i]]$size[1]
data_t = cbind(rep(chnk, nrow(data_t)), rep(tmstmp, nrow(data_t)), rep(sz, nrow(data_t)), data_t)
colnames(data_t) = c("chunk", "timestamp", "size", nms)
data_join = datalist[[1]]
for (i in 2:length(datalist)){
data_join = rbind(data_join, datalist[[i]])
}
rownames(data_join) = NULL
datalist = split(data, data$chunk)
names(datalist) = paste0(rep("chunk_", length(datalist)), names(datalist))
for (i in 1:length(datalist)){
# From the source data
nms = datalist[[i]]$fieldname
chnk = datalist[[i]]$chunk[1]
tmstmp = datalist[[i]]$timestamp[1]
sz = datalist[[i]]$size[1]
# From experimental constants
time = chnk*chunk_duration
conc = conc_increase[floor(time/conc_duration)+1]
data_t = as.data.frame(t(datalist[[i]][,c(5:ncol(data))]))
data_t = cbind(rep(chnk, nrow(data_t)), rep(tmstmp, nrow(data_t)), rep(sz, nrow(data_t)),
rep(time, nrow(data_t)), rep(conc, nrow(data_t)),
data_t)
colnames(data_t) = c("chunk", "timestamp", "size", nms)
datalist[[i]] = data_t
}
data_join = datalist[[1]]
for (i in 2:length(datalist)){
data_join = rbind(data_join, datalist[[i]])
}
rownames(data_join) = NULL
View(data_join)
datalist = split(data, data$chunk)
names(datalist) = paste0(rep("chunk_", length(datalist)), names(datalist))
for (i in 1:length(datalist)){
# From the source data
nms = datalist[[i]]$fieldname
chnk = datalist[[i]]$chunk[1]
tmstmp = datalist[[i]]$timestamp[1]
sz = datalist[[i]]$size[1]
# From experimental constants
time = chnk*chunk_duration
conc = conc_increase[floor(time/conc_duration)+1]
data_t = as.data.frame(t(datalist[[i]][,c(5:ncol(data))]))
data_t = cbind(rep(chnk, nrow(data_t)), rep(tmstmp, nrow(data_t)), rep(sz, nrow(data_t)),
rep(time, nrow(data_t)), rep(conc, nrow(data_t)),
data_t)
colnames(data_t) = c("chunk", "timestamp", "size", "time", "concentration", nms)
datalist[[i]] = data_t
}
data_join = datalist[[1]]
for (i in 2:length(datalist)){
data_join = rbind(data_join, datalist[[i]])
}
rownames(data_join) = NULL
rm(data_t, i, nms, sz, tmstmp, chnk)
datalist[[1]]$phasez
# Extract phases of first chunk
phase_deg = datalist[[1]]$phasez * 180/pi
phase_deg
target_deg = -45
target_deg
phase_close = min(abs(phase_deg-target_deg))
phase_close
?sort
sort(abs(phase_deg-target_deg), index.return = "TRUE")
?order
order(abs(phase_deg-target_deg))
phase_close = order(abs(phase_deg-target_deg))
phase_close[1]
datalist[[1]]$frequency[phase_close[1]]
-45*pi/180
datalist[[1]]$phasez
target_freq = datalist[[1]]$frequency[phase_close[1]]
target_phase = -45
phase_deg = datalist[[1]]$phasez * 180/pi
phase_close = order(abs(phase_deg-target_phase))
target_freq = datalist[[1]]$frequency[phase_close[1]]
sum(data_join$frequency == target_freq)
data_target = data_join[data_join$frequency == target_freq,]
View(data_target)
ggplot(data_target, aes(x = time, y = absz)) +
geom_line()
ggplot(data_target, aes(x = time, y = absz)) +
geom_point()
target_freq = datalist[[1]]$frequency[phase_close[2]]
data_target = data_join[data_join$frequency == target_freq,]
# Plotting
ggplot(data_target, aes(x = time, y = absz)) +
geom_point()
target_freq = datalist[[1]]$frequency[phase_close[1]]
data_target = data_join[data_join$frequency == target_freq,]
# Plotting
ggplot(data_target, aes(x = time, y = absz)) +
geom_point()
# Plotting
ggplot(data_target, aes(x = time, y = absz)) +
geom_line()
diff(data_target$absz)
diff(diff(data_target$absz))
diff(data_target$absz, differences = 2)
data_diff = diff(data_target$absz, differences = 2)
diff(data_target$absz, differences = 2) > 0
data_diff = diff(data_target$absz, differences = 2) > 0
i = 1
data_diff[i] == data_diff[1]
i = 1
while (data_diff[i] == data_diff[1]) {
i = i+1
}
data_target$absz[i]
data_target$absz[5]
data_target$absz[6]
data_target$absz[4]
data_target$absz[3]
data_target$absz[i-1]
data_infl = data_target$absz[i-1]
data_target$absz/(data_target$absz[i-1])
cbind(data_target$time, data_target$absz/(data_target$absz[i-1]))
data_infl = cbind(data_target$time, data_target$absz/(data_target$absz[i-1]))
View(data_infl)
data_effsz = cbind(data_target$time, data_target$absz/(data_target$absz[i-1]))
View(data_effsz)
?cbind
data_effsz = cbind(Time = data_target$time, data_target$absz/(data_target$absz[i-1]))
data_effsz = cbind(Time = data_target$time, EffectSize = data_target$absz/(data_target$absz[i-1]))
ggplot(data_effsz, aes(x = Time, y = EffectSize)) +
geom_line()
length(datalist)
ggplot(data_target, aes(x = time, y = absz)) +
geom_line() +
geom_vline(xintercept = conc_duration*(1:length(datalist)))
ggplot(data_target, aes(x = time, y = absz)) +
geom_line()
max(data_target$time)
max(data_target$time)/conc_duration
ggplot(data_target, aes(x = time, y = absz)) +
geom_line() +
geom_vline(xintercept = conc_duration*(1:floor(max(data_target$time)/conc_duration)))
